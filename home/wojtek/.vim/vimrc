"==========<VUNDLE>===============================
set nocompatible
filetype off

set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
  Plugin 'VundleVim/Vundle.vim'
  Plugin 'scrooloose/nerdtree'
  " Plugin 'ryanoasis/vim-devicons'
  Plugin 'itchyny/lightline.vim'
  Plugin 'PotatoesMaster/i3-vim-syntax'
  Plugin 'luochen1990/rainbow'
  Plugin 'godlygeek/tabular'
  Plugin 'tpope/vim-surround'
  Plugin 'tpope/vim-commentary'
  Plugin 'michaeljsmith/vim-indent-object'
  Plugin 'matze/vim-move'
  Plugin 'ycm-core/YouCompleteMe'
  Plugin 'rust-lang/rust.vim'
  Plugin 'morhetz/gruvbox'
  Plugin 'vim-scripts/errormarker.vim'
  Plugin 'pboettch/vim-cmake-syntax'
  Plugin 'townk/vim-autoclose'
call vundle#end()
"==========<FUNCTIONS>============================
function! ToggleWhiteCharacters()
  if (&list)
    :set nolist
    echo "White characters display toggled off"
  else
    :set list
    echo "White characters display toggled on"
  endif
endfunction

function! ToggleIndendation()
  if (&expandtab)
    :set noexpandtab tabstop=8 shiftwidth=8 softtabstop=0
    :echo "Hard tabs are on"
  else
    :set expandtab shiftwidth=4 softtabstop=4
    :echo "Spaces are on"
  endif
endfunction
"==========<CORE SETTINGS>===========================
syntax enable
filetype plugin indent on
set encoding=UTF-8
let g:rainbow_active = 1
let g:NERDTreeChDirMode = 2
set background=dark
colorscheme gruvbox
let &errorformat="%f:%l:%c: %t%*[^:]:%m,%f:%l: %t%*[^:]:%m," . &errorformat

set incsearch
set colorcolumn=0
set laststatus=2
set path=.
set tags=./tags;/
set ic
set autoindent
set listchars=tab:~\ `,trail:^
set list
set number relativenumber
set wrap
set splitbelow
set splitright
set wildmenu
set nohlsearch
set tabstop=8 shiftwidth=8

if has("gui_running")
  set go-=T
  set go-=r
  set go-=m
  set guifont=JetBrains\ Mono\ NL\ 10
  set lines=30 columns=120
endif

inoremap jk <Esc>
inoremap {{ {}<Left><CR><CR><Up><Tab>
inoremap <C-v> <C-r>+
imap <C-d> jkddi

nnoremap <Space> :w<CR>
nnoremap Q :NERDTreeToggle<CR>:NERDTreeRefreshRoot<CR>
nnoremap S :call ToggleWhiteCharacters()<CR>
nnoremap ~ :call ToggleIndendation()<CR>
nnoremap <C-w>- :sp<CR>
nnoremap <C-W>/ :vs<CR>
nnoremap <C-w>_ :ter<CR>
nnoremap <C-w>? :vert ter<CR>
nnoremap <Left> <C-w><
nnoremap <Right> <C-w>>
nnoremap <Down> <C-w>-
nnoremap <Up> <C-w>+
nnoremap <C-w><Enter> :vsplit $MYVIMRC<CR>
nnoremap ZQ :q!<CR>
nnoremap ZZ :wq<CR>
nnoremap <S-F10> :!cmake ..;cmake --build .<CR>

autocmd BufRead * nnoremap gr :YcmCompleter RefactorRename 
autocmd VimEnter * set textwidth=0
"autocmd VimEnter * highlight MatchParen cterm=none ctermbg=magenta ctermfg=white
autocmd BufWritePost .Xresources call system("xrdb ~/.Xresources")
"==========<PYTHON FILES>============================
autocmd BufRead *.py let python_highlight_all = 1
autocmd BufRead *.py set colorcolumn=110
"==========<C/C++ FILES>=============================
autocmd BufRead *.c set colorcolumn=110
autocmd BufRead *.h set colorcolumn=110
autocmd BufRead *.cpp set colorcolumn=110
autocmd BufRead *.hpp set colorcolumn=110
"==========<RUST FILES>==============================
autocmd BufRead *.rs set colorcolumn=110
autocmd BufRead *.rs nnoremap <buffer> <S-F9> :!cargo run<CR>
autocmd BufRead *.rs nnoremap <buffer> <S-F10> :!cargo build<CR>
"==========<SONGBOOK FILES>==========================
autocmd BufRead *.lyr set scrollbind
autocmd BufRead *.ch set scrollbind
