# vim: ft=cfg
#
# This is the configuration file of "rifle", ranger's file executor/opener.
# Each line consists of conditions and a command.  For each line the conditions
# are checked and if they are met, the respective command is run.
#
# Syntax:
#   <condition1> , <condition2> , ... = command
#
# The command can contain these environment variables:
#   $1-$9 | The n-th selected file
#   $@    | All selected files
#
# If you use the special command "ask", rifle will ask you what program to run.
#
# Prefixing a condition with "!" will negate its result.
# These conditions are currently supported:
#   match <regexp> | The regexp matches $1
#   ext <regexp>   | The regexp matches the extension of $1
#   mime <regexp>  | The regexp matches the mime type of $1
#   name <regexp>  | The regexp matches the basename of $1
#   path <regexp>  | The regexp matches the absolute path of $1
#   has <program>  | The program is installed (i.e. located in $PATH)
#   env <variable> | The environment variable "variable" is non-empty
#   file           | $1 is a file
#   directory      | $1 is a directory
#   number <n>     | change the number of this command to n
#   terminal       | stdin, stderr and stdout are connected to a terminal
#   X              | $DISPLAY is not empty (i.e. Xorg runs)
#
# There are also pseudo-conditions which have a "side effect":
#   flag <flags>  | Change how the program is run. See below.
#   label <label> | Assign a label or name to the command so it can
#                 | be started with :open_with <label> in ranger
#                 | or `rifle -p <label>` in the standalone executable.
#   else          | Always true.
#
# Flags are single characters which slightly transform the command:
#   f | Fork the program, make it run in the background.
#     |   New command = setsid $command >& /dev/null &
#   r | Execute the command with root permissions
#     |   New command = sudo $command
#   t | Run the program in a new terminal.  If $TERMCMD is not defined,
#     | rifle will attempt to extract it from $TERM.
#     |   New command = $TERMCMD -e $command
# Note: The "New command" serves only as an illustration, the exact
# implementation may differ.
# Note: When using rifle in ranger, there is an additional flag "c" for
# only running the current file even if you have marked multiple files.


ext x?html?, has firefox, X, flag f = firefox -- "$@"

name ^[mM]akefile$ = make

mime  ^text, label editor = vim "$@"
mime  ^text, label pager  = "$PAGER" -- "$@"
mime  ^text, label vscode, = codium "$@"

!mime ^text, label editor, ext xml|json|csv|tex|py|pl|rb|js|sh|php|ino = vim "$@"
!mime ^text, label pager,  ext xml|json|csv|tex|py|pl|rb|js|sh|php|ino = "$PAGER" -- "$@"


ext 1,   label run, flag f = man "$1"
ext py,  label run, flag f = python -- "$1"
ext pl,  label run, flag f = perl -- "$1"
ext rb,  label run, flag f = ruby -- "$1"
ext js,  label run, flag f = node -- "$1"
ext sh,  label run, flag f = sh --  "$1"
ext php, label run, flag f = php -- "$1"

mime ^video|^audio, has celluloid,    X, flag f = celluloid "$@"
mime ^video|^audio, has mpv,          X, flag f = mpv "$@"

ext pdf,  has zathura,  X, flag f = zathura -- "$@"
ext pptx?|od[dfgpst]|docx?|sxc|xlsx?|xlt|xlw|gnm|gnumeric, has libreoffice, X, flag f = libreoffice "$@"

mime ^image/svg,   has inkscape, X, flag f = inkscape -- "$@"
mime ^image/x-xcf, has gimp,     X, flag f = gimp -- "$@"
mime ^image,       has sxiv,     X, flag f = sxiv -- "$@"

ext tar|gz, has tar = tar vvtf "$@" | "$PAGER"

number 1, mime ^image, has xwallpaper, X = ~/Bin/setbg.sh tile "$1"
number 2, mime ^image, has xwallpaper, X = ~/Bin/setbg.sh center "$1"
number 3, mime ^image, has xwallpaper, X = ~/Bin/setbg.sh maximize "$1"
number 4, mime ^image, has xwallpaper, X = ~/Bin/setbg.sh zoom "$1"

!mime ^text, !ext xml|json|csv|tex|py|pl|rb|js|sh|php|ino = vim "$@"
!mime ^text, !ext xml|json|csv|tex|py|pl|rb|js|sh|php|ino = "$PAGER" -- "$@"

mime application/x-executable = "$1"
